{"ast":null,"code":"// import NoteContext from \"./noteContext\";\n// import { useState } from \"react\";\n// const NoteState = (props) => {\n//   const host = \"http://localhost:5000\"\n//   const notesInitial = []\n//   const [notes, setNotes] = useState(notesInitial)\n//   // Get all Notes\n//   const getNotes = async () => {\n//     // API Call \n//     const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n//       method: 'GET',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjEzMWRjNWUzZTQwMzdjZDQ3MzRhMDY2In0sImlhdCI6MTYzMDY2OTU5Nn0.hJS0hx6I7ROugkqjL2CjrJuefA3pJi-IU5yGUbRHI4Q\"\n//       }\n//     });\n//     const json = await response.json() \n//     setNotes(json)\n//   }\n//   // Add a Note\n//   const addNote = async (title, description, tag) => {\n//     // TODO: API Call\n//     // API Call \n//     const response = await fetch(`${host}/api/notes/addnote`, {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjEzMWRjNWUzZTQwMzdjZDQ3MzRhMDY2In0sImlhdCI6MTYzMDY2OTU5Nn0.hJS0hx6I7ROugkqjL2CjrJuefA3pJi-IU5yGUbRHI4Q\"\n//       },\n//       body: JSON.stringify({title, description, tag})\n//     });\n//     const note = await response.json();\n//     setNotes(notes.concat(note))\n//   }\n//   // Delete a Note\n//   const deleteNote = async (id) => {\n//     // API Call\n//     const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n//       method: 'DELETE',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjEzMWRjNWUzZTQwMzdjZDQ3MzRhMDY2In0sImlhdCI6MTYzMDY2OTU5Nn0.hJS0hx6I7ROugkqjL2CjrJuefA3pJi-IU5yGUbRHI4Q\"\n//       }\n//     });\n//     const json = response.json(); \n//     const newNotes = notes.filter((note) => { return note._id !== id })\n//     setNotes(newNotes)\n//   }\n//   // Edit a Note\n//   const editNote = async (id, title, description, tag) => {\n//     // API Call \n//     const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n//       method: 'PUT',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjEzMWRjNWUzZTQwMzdjZDQ3MzRhMDY2In0sImlhdCI6MTYzMDY2OTU5Nn0.hJS0hx6I7ROugkqjL2CjrJuefA3pJi-IU5yGUbRHI4Q\"\n//       },\n//       body: JSON.stringify({title, description, tag})\n//     });\n//     const json = await response.json(); \n//      let newNotes = JSON.parse(JSON.stringify(notes))\n//     // Logic to edit in client\n//     for (let index = 0; index < newNotes.length; index++) {\n//       const element = newNotes[index];\n//       if (element._id === id) {\n//         newNotes[index].title = title;\n//         newNotes[index].description = description;\n//         newNotes[index].tag = tag; \n//         break; \n//       }\n//     }  \n//     setNotes(newNotes);\n//   }\n//   return (\n//     <NoteContext.Provider value={{ notes, addNote, deleteNote, editNote, getNotes }}>\n//       {props.children}\n//     </NoteContext.Provider>\n//   )\n// }\n// export default NoteState;","map":{"version":3,"sources":["E:/PROJECTS/Ashberry/client/src/context/NoteState.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["// import NoteContext from \"./noteContext\";\r\n// import { useState } from \"react\";\r\n\r\n// const NoteState = (props) => {\r\n//   const host = \"http://localhost:5000\"\r\n//   const notesInitial = []\r\n//   const [notes, setNotes] = useState(notesInitial)\r\n\r\n//   // Get all Notes\r\n//   const getNotes = async () => {\r\n//     // API Call \r\n//     const response = await fetch(`${host}/api/notes/fetchallnotes`, {\r\n//       method: 'GET',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//         \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjEzMWRjNWUzZTQwMzdjZDQ3MzRhMDY2In0sImlhdCI6MTYzMDY2OTU5Nn0.hJS0hx6I7ROugkqjL2CjrJuefA3pJi-IU5yGUbRHI4Q\"\r\n//       }\r\n//     });\r\n//     const json = await response.json() \r\n//     setNotes(json)\r\n//   }\r\n\r\n//   // Add a Note\r\n//   const addNote = async (title, description, tag) => {\r\n//     // TODO: API Call\r\n//     // API Call \r\n//     const response = await fetch(`${host}/api/notes/addnote`, {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//         \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjEzMWRjNWUzZTQwMzdjZDQ3MzRhMDY2In0sImlhdCI6MTYzMDY2OTU5Nn0.hJS0hx6I7ROugkqjL2CjrJuefA3pJi-IU5yGUbRHI4Q\"\r\n//       },\r\n//       body: JSON.stringify({title, description, tag})\r\n//     });\r\n\r\n//     const note = await response.json();\r\n//     setNotes(notes.concat(note))\r\n//   }\r\n\r\n//   // Delete a Note\r\n//   const deleteNote = async (id) => {\r\n//     // API Call\r\n//     const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n//       method: 'DELETE',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//         \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjEzMWRjNWUzZTQwMzdjZDQ3MzRhMDY2In0sImlhdCI6MTYzMDY2OTU5Nn0.hJS0hx6I7ROugkqjL2CjrJuefA3pJi-IU5yGUbRHI4Q\"\r\n//       }\r\n//     });\r\n//     const json = response.json(); \r\n//     const newNotes = notes.filter((note) => { return note._id !== id })\r\n//     setNotes(newNotes)\r\n//   }\r\n\r\n//   // Edit a Note\r\n//   const editNote = async (id, title, description, tag) => {\r\n//     // API Call \r\n//     const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n//       method: 'PUT',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//         \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjEzMWRjNWUzZTQwMzdjZDQ3MzRhMDY2In0sImlhdCI6MTYzMDY2OTU5Nn0.hJS0hx6I7ROugkqjL2CjrJuefA3pJi-IU5yGUbRHI4Q\"\r\n//       },\r\n//       body: JSON.stringify({title, description, tag})\r\n//     });\r\n//     const json = await response.json(); \r\n\r\n//      let newNotes = JSON.parse(JSON.stringify(notes))\r\n//     // Logic to edit in client\r\n//     for (let index = 0; index < newNotes.length; index++) {\r\n//       const element = newNotes[index];\r\n//       if (element._id === id) {\r\n//         newNotes[index].title = title;\r\n//         newNotes[index].description = description;\r\n//         newNotes[index].tag = tag; \r\n//         break; \r\n//       }\r\n//     }  \r\n//     setNotes(newNotes);\r\n//   }\r\n\r\n//   return (\r\n//     <NoteContext.Provider value={{ notes, addNote, deleteNote, editNote, getNotes }}>\r\n//       {props.children}\r\n//     </NoteContext.Provider>\r\n//   )\r\n\r\n// }\r\n// export default NoteState;"]},"metadata":{},"sourceType":"module"}